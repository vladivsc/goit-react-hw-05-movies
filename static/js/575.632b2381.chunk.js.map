{"version":3,"file":"static/js/575.632b2381.chunk.js","mappings":"+PACA,EAAyB,wB,SC6CzB,EAtCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,+FACnBJ,GAAW,GADQ,mBAIMK,EAAAA,EAAAA,IAAkBJ,GAJxB,gBAITK,EAJS,EAITA,KACRR,EAAWQ,EAAKC,SALC,gDAMRC,EANQ,KAMRA,SACTC,QAAQC,IAAIF,EAASF,KAAKK,SAPT,yBASjBX,GAAW,GATM,4EAAH,qDAYlBI,EAAaH,EACd,GAAE,CAACA,IAEJ,IAAMW,EAAaf,EAAQgB,KAAI,YAA8B,IAA3BZ,EAA0B,EAA1BA,GAAIa,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5C,OACE,2BACE,eAAGC,UAAWC,EAAd,qBAAsCH,MACtC,uBAAIC,MAFGd,EAKZ,IAED,OACE,2BACGF,IAAW,SAACmB,EAAA,EAAD,KACZ,wBAAKN,MAGV,C,+LC1CKO,EAAU,mCACVC,EAAW,+BACXC,EAAY,UAAMD,EAAN,wBACZE,EAAM,UAAMF,EAAN,WACNG,EAAU,UAAMH,EAAN,iBAEHI,EAAmB,mCAAG,uGAAOC,EAAP,+BAAc,EAAd,SACpBC,EAAAA,EAAAA,IAAA,UAAaL,EAAb,oBAAqCF,EAArC,iBAAqDM,IADjC,mFAAH,qDAInBE,EAAc,mCAAG,WAAM1B,GAAN,iFACfyB,EAAAA,EAAAA,IAAA,UAAaJ,GAAb,OAAsBrB,EAAtB,oBAAoCkB,IADrB,mFAAH,sDAIdS,EAAiB,mCAAG,WAAOC,GAAP,0FAAoBJ,EAApB,+BAA2B,EAA3B,SAClBC,EAAAA,EAAAA,IAAA,UACRH,EADQ,oBACcJ,EADd,kBAC+BU,EAD/B,iBACmDJ,IAFjC,mFAAH,sDAMjBK,EAAe,mCAAG,WAAM7B,GAAN,iFAChByB,EAAAA,EAAAA,IAAA,UAAaJ,GAAb,OAAsBrB,EAAtB,4BAA4CkB,IAD5B,mFAAH,sDAIfd,EAAiB,mCAAG,WAAMJ,GAAN,iFAClByB,EAAAA,EAAAA,IAAA,UAAaJ,GAAb,OAAsBrB,EAAtB,4BAA4CkB,IAD1B,mFAAH,qD","sources":["webpack://react-homework-template/./src/components/Pages/Reviews/reviews.module.scss?e607","components/Pages/Reviews/Reviews.jsx","components/api/themoviedb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"author\":\"reviews_author__Tj5Vz\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchReviewsMovie } from 'components/api/themoviedb';\n\nimport Loader from 'components/Loader/Loader';\nimport styles from '../Reviews/reviews.module.scss';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setLoading(true);\n\n      try {\n        const { data } = await fetchReviewsMovie(id);\n        setReviews(data.results);\n      } catch ({ response }) {\n        console.log(response.data.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviews(id);\n  }, [id]);\n\n  const reviewList = reviews.map(({ id, author, content }) => {\n    return (\n      <li key={id}>\n        <p className={styles.author}>Author: {author}</p>\n        <p>{content}</p>\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <ul>{reviewList}</ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'ef7abe5b40a07c080750148cf03b2668';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING_URL = `${BASE_URL}/trending/movie/week`;\nconst ID_URL = `${BASE_URL}/movie/`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\n\nexport const fetchTrendingMovies = async (page = 1) => {\n  return await axios.get(`${TRENDING_URL}?api_key=${API_KEY}&page=${page}`);\n};\n\nexport const fetchMovieById = async id => {\n  return await axios.get(`${ID_URL}${id}?api_key=${API_KEY}`);\n};\n\nexport const fetchSearchMovies = async (searchQuery, page = 1) => {\n  return await axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&query=${searchQuery}&page=${page}`\n  );\n};\n\nexport const fetchCastMovies = async id => {\n  return await axios.get(`${ID_URL}${id}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchReviewsMovie = async id => {\n  return await axios.get(`${ID_URL}${id}/reviews?api_key=${API_KEY}`);\n};\n"],"names":["useState","reviews","setReviews","loading","setLoading","id","useParams","useEffect","fetchReviews","fetchReviewsMovie","data","results","response","console","log","massage","reviewList","map","author","content","className","styles","Loader","API_KEY","BASE_URL","TRENDING_URL","ID_URL","SEARCH_URL","fetchTrendingMovies","page","axios","fetchMovieById","fetchSearchMovies","searchQuery","fetchCastMovies"],"sourceRoot":""}